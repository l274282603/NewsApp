<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!--AppBarLayout
        内部的子View通过在布局中加app:layout_scrollFlags设置执行的动作
        具体的值有：1.scroll —— 表示值设置未scroll的view会根据对应的滚动事件一起滚动
        2.enterAlways —— 值设为enterAlways的View,当对应滚动视图往下滚动时，
                         该View会直接往下滚动。而不用考虑对应滚动视图是否在滚动
        3.exitUntilCollapsed：—— 值设为exitUntilCollapsed的View，当这个View要往上逐渐“消逝”时，
                         会一直往上滑动，直到剩下的的高度达到它的最小高度后，再响应对应滚动视图的内部滑动事件
        4.enterAlwaysCollapsed：是enterAlways的附加选项，一般跟enterAlways一起使用，
                                它是指，View在往下“出现”的时候，首先是enterAlways效果，当View的高度达到最小高度时，
                                View就暂时不去往下滚动，直到对应滚动视图滑动到顶部不再滑动时，View再继续往下滑动，直到滑到View的顶部结束
       -->

    <android.support.design.widget.AppBarLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/colorPrimary">

        <android.support.v7.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_marginTop="15dp"
            android:layout_height="?attr/actionBarSize"
            app:layout_scrollFlags="scroll|enterAlways"
            >
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="新闻"
                android:textColor="@color/white"
                android:textSize="22sp"/>

        </android.support.v7.widget.Toolbar>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            >
            <!--TabLayout中一些属性的说明
                 app:tabTextColor         ：设置未选中字体的颜色
                 app:tabSelectedTextColor ：设置选中字体的颜色
                 app:tabIndicatorColor    ：设置指示器下标的颜色
                 app:tabBackground        ：设置整个TabLayout的颜色
                 app:tabIndicatorHeight   ：设置指示器下标的宽度-->
            <android.support.design.widget.TabLayout
                android:id="@+id/tablayout"
                android:layout_width="0dp"
                android:layout_height="40dp"
                app:tabTextColor="@color/alpha_50_white"
                app:tabSelectedTextColor="@color/white"
                app:tabMode="scrollable"
                android:layout_weight="1">
            </android.support.design.widget.TabLayout>

            <ImageView
                android:id="@+id/addimg"
                android:layout_width="40dp"
                android:layout_height="40dp"
                android:background="@drawable/ic_add_white_18dp"

                />

        </LinearLayout>

    </android.support.design.widget.AppBarLayout>

    <android.support.v4.view.ViewPager
        android:id="@+id/viewpager"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

    </android.support.v4.view.ViewPager>

    <!--
          1、app:borderWidth="" 边框宽度，通常设置为0 ，用于解决Android 5.X设备上阴影无法正常显示的问题
          2、app:backgroundTint="" 按钮的背景颜色，不设置，默认使用theme中colorAccent的颜色
          3、app:rippleColor="" 点击的边缘阴影颜色
          4、app:elevation="" 边缘阴影的宽度
          5、app:pressedTranslationZ="16dp" 点击按钮时，按钮边缘阴影的宽度，通常设置比elevation的数值大-->
    <android.support.design.widget.FloatingActionButton
        android:id="@+id/floatingButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/ic_arrow_upward"
        android:layout_gravity="bottom|right"
        android:layout_margin="16dp"
        android:visibility="gone"
        />

</android.support.design.widget.CoordinatorLayout>